<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Meta on Agam&#39;s Mashed-Up Pome</title>
    <link>http://agam.github.io/categories/meta/</link>
    <description>Recent content in Meta on Agam&#39;s Mashed-Up Pome</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 05 May 2016 21:04:17 -0700</lastBuildDate>
    <atom:link href="http://agam.github.io/categories/meta/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>getting started with hugo</title>
      <link>http://agam.github.io/post/getting-started-with-hugo/</link>
      <pubDate>Thu, 05 May 2016 21:04:17 -0700</pubDate>
      
      <guid>http://agam.github.io/post/getting-started-with-hugo/</guid>
      <description>

&lt;p&gt;Some notes on renewing the blog &amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;initial-set-up-and-migration&#34;&gt;Initial set up and migration&lt;/h2&gt;

&lt;p&gt;Creating a new site couldn’t be simpler (and yes, this isn’t blog-specific, you could really make &lt;em&gt;any&lt;/em&gt; kind of static website)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ hugo new site progblog
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I came across this simple-to-use tool someone else created, called &lt;a href=&#34;thanks to [Alistair Young]&#34;&gt;Octohug&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Edit&lt;/em&gt;: I realized that the titles of the posts have been lost and replaced by the wordy urls, so “…” became “dot dot dot” and “/“ became “slash”. I might change this later, or I might be lazy and skip it. It’s not &lt;em&gt;all that bad&lt;/em&gt; to look at anyway. Ditto for adding back tags/categories. Too bad.&lt;/p&gt;

&lt;h2 id=&#34;building-and-previewing-the-site&#34;&gt;Building and previewing the site&lt;/h2&gt;

&lt;p&gt;The counterpart to &lt;code&gt;rake generate&lt;/code&gt; for Octopress, except much, much, &lt;em&gt;much&lt;/em&gt; faster.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ hugo --theme &amp;quot;angels-ladder&amp;quot; --buildDrafts
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The counterpart to &lt;code&gt;rake preview&lt;/code&gt; is something like:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ hugo server -t angels-ladder -D -w
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It’s worth pointing out that there is no longer any “generating files …” output on the console, because any changes are reflected &lt;em&gt;within a second&lt;/em&gt; or so. Really, you can’t tell the difference (which, of course, is how it should be!)&lt;/p&gt;

&lt;h2 id=&#34;gist-tags&#34;&gt;Gist tags&lt;/h2&gt;

&lt;p&gt;A small digression: I had a lot of &lt;em&gt;gist tags&lt;/em&gt; of the form &lt;code&gt;{% gist 12f2347dfh9 %}&lt;/code&gt;, and I used these so often I began to think of them as part of standard markdown, but of course they’re &lt;em&gt;not&lt;/em&gt; part of standard markdown, so we need a workaround, and luckily Hugo has a similar feature called &lt;em&gt;shortcodes&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;So, I added a shortcode layout for the &lt;code&gt;gist&lt;/code&gt; keyword as described &lt;a href=&#34;https://vielmetti.github.io/post/2015/2015-07-14-publishing-from-hugo-to-github-pages/&#34;&gt;here&lt;/a&gt;, and then ran &lt;code&gt;sed&lt;/code&gt; over the post content:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ sed -i -- &#39;s/{% gist \([0-9a-z]*\) %}/&lt;script type=&#34;text/javascript&#34; src=&#34;http://gist.github.com/1.js&#34;&gt;&lt;/script&gt;
/&#39; content/post/*
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;archiving-the-old-blog&#34;&gt;Archiving the old blog&lt;/h2&gt;

&lt;p&gt;For nostalgic purposes (?) alone, I created a new repo, and saved a snapshot of the current &lt;code&gt;agam.github.io&lt;/code&gt; repo there:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ git push https://github.com/agam/Old-Jekyll-Blog.git
$ git push https://github.com/agam/Old-Jekyll-Blog.git master
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;publishing-to-github-pages&#34;&gt;Publishing to Github Pages&lt;/h2&gt;

&lt;p&gt;First of all, creating a new post is as simple as&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ hugo new post/getting-started-with-hugo.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I briefly considered jumping to a different static hosting site, but it didn’t seem worth the trouble. So I adapted the approach described &lt;a href=&#34;thanks to Edward Vielmetti&#34;&gt;here&lt;/a&gt;, which just means cleaning up the existing repo, deleting the &lt;code&gt;source&lt;/code&gt; branch, and directing Hugo’s output to the &lt;code&gt;master&lt;/code&gt; branch,  then pushing the same up to Github:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ hugo -d ../Github/agam.github.io/ --theme=angels-ladder
$ cd ../Github/abam.github.io
$ git commit -a -m ‘sync to latest post’
$ git push origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That’s it! I do have some TODOs left, like installing &lt;code&gt;Pygments&lt;/code&gt; so that source code formatting doesn’t suck , but other than that, I’m good to go.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Edit:&lt;/em&gt; No point leaving that hanging, so I added it:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://yandex.st/highlightjs/8.0/styles/default.min.css&amp;quot;&amp;gt;
&amp;lt;script src=&amp;quot;https://yandex.st/highlightjs/8.0/highlight.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;hljs.initHighlightingOnLoad();&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(I went with client-side highlighting since I didn’t want to slow down my fast new Go site generator with a sluggish Python plugin. So if the syntax coloring is off, you know whom to blame.)&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>